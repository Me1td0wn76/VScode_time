using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;

namespace VscodeUsageTracker
{
    public partial class SimpleModernForm : Form
    {
        private VsCodeMonitor _monitor = null!;
        private NotifyIcon _notifyIcon = null!;
        private System.Windows.Forms.Timer _updateTimer = null!;
        
        // UI „Ç≥„É≥„Éà„É≠„Éº„É´
        private Panel _headerPanel = null!;
        private Panel _statsPanel = null!;
        private Panel _buttonPanel = null!;
        private Label _titleLabel = null!;
        private Label _statusLabel = null!;
        private Label _totalTimeLabel = null!;
        private Label _todayTimeLabel = null!;
        private Label _weeklyAvgLabel = null!;
        private Label _sessionsLabel = null!;

        // „Ç´„É©„Éº„ÉÜ„Éº„Éû
        private readonly Color _primaryColor = Color.FromArgb(59, 130, 246);    // Blue
        private readonly Color _successColor = Color.FromArgb(34, 197, 94);     // Green
        private readonly Color _warningColor = Color.FromArgb(245, 158, 11);    // Yellow
        private readonly Color _dangerColor = Color.FromArgb(239, 68, 68);      // Red
        private readonly Color _backgroundColor = Color.FromArgb(248, 250, 252); // Light Gray
        private readonly Color _cardColor = Color.White;
        private readonly Color _textDark = Color.FromArgb(31, 41, 55);
        private readonly Color _textLight = Color.FromArgb(107, 114, 128);

        public SimpleModernForm()
        {
            InitializeComponent();
            InitializeMonitor();
            InitializeNotifyIcon();
            InitializeUpdateTimer();
            UpdateDisplay();
        }

        private void InitializeComponent()
        {
            this.Text = "VSCode ‰ΩøÁî®ÊôÇÈñì„Éà„É©„ÉÉ„Ç´„Éº v2.0";
            this.Size = new Size(500, 650);
            this.StartPosition = FormStartPosition.CenterScreen;
            this.BackColor = _backgroundColor;
            this.FormBorderStyle = FormBorderStyle.FixedSingle;
            this.MaximizeBox = false;
            this.ShowInTaskbar = false;
            this.Font = new Font("Segoe UI", 9);

            CreateHeaderPanel();
            CreateStatsPanel();
            CreateButtonPanel();
            
            this.FormClosing += SimpleModernForm_FormClosing;
        }

        private void CreateHeaderPanel()
        {
            _headerPanel = new Panel
            {
                Dock = DockStyle.Top,
                Height = 80,
                BackColor = _primaryColor,
                Padding = new Padding(20)
            };

            _titleLabel = new Label
            {
                Text = "VSCode ‰ΩøÁî®ÊôÇÈñì„Éà„É©„ÉÉ„Ç´„Éº",
                Font = new Font("Segoe UI", 16, FontStyle.Bold),
                ForeColor = Color.White,
                Location = new Point(20, 15),
                Size = new Size(400, 30),
                TextAlign = ContentAlignment.MiddleLeft
            };

            _statusLabel = new Label
            {
                Text = "Áõ£Ë¶ñ‰∏≠...",
                Font = new Font("Segoe UI", 10),
                ForeColor = Color.FromArgb(219, 234, 254),
                Location = new Point(20, 45),
                Size = new Size(400, 20),
                TextAlign = ContentAlignment.MiddleLeft
            };

            _headerPanel.Controls.AddRange(new Control[] { _titleLabel, _statusLabel });
            this.Controls.Add(_headerPanel);
        }

        private void CreateStatsPanel()
        {
            _statsPanel = new Panel
            {
                Location = new Point(0, 80), // „Éò„ÉÉ„ÉÄ„Éº„ÅÆÈ´ò„ÅïÂàÜ„Å†„Åë‰∏ã„Å´„Åö„Çâ„Åô
                Size = new Size(500, 490),   // ÊòéÁ§∫ÁöÑ„Å´„Çµ„Ç§„Ç∫„ÇíÊåáÂÆö
                BackColor = _backgroundColor,
                Padding = new Padding(20),
                AutoScroll = true
            };

            // Áµ±Ë®à„Ç´„Éº„Éâ„Çí‰ΩúÊàê
            _totalTimeLabel = CreateStatCard(
                "üìä ÂêàË®à‰ΩøÁî®ÊôÇÈñì", 
                "Ë®àÁÆó‰∏≠...", 
                new Point(20, 20), 
                _primaryColor
            );

            _todayTimeLabel = CreateStatCard(
                "üìÖ ‰ªäÊó•„ÅÆ‰ΩøÁî®ÊôÇÈñì", 
                "Ë®àÁÆó‰∏≠...", 
                new Point(20, 130), 
                _successColor
            );

            _weeklyAvgLabel = CreateStatCard(
                "üìà ÈÄ±Âπ≥Âùá‰ΩøÁî®ÊôÇÈñì", 
                "Ë®àÁÆó‰∏≠...", 
                new Point(20, 240), 
                _warningColor
            );

            _sessionsLabel = CreateStatCard(
                "üî¢ Á∑è„Çª„ÉÉ„Ç∑„Éß„É≥Êï∞", 
                "Ë®àÁÆó‰∏≠...", 
                new Point(20, 350), 
                _dangerColor
            );

            this.Controls.Add(_statsPanel);
        }

        private Label CreateStatCard(string title, string value, Point location, Color accentColor)
        {
            var cardPanel = new Panel
            {
                Location = location,
                Size = new Size(440, 90),
                BackColor = _cardColor,
                BorderStyle = BorderStyle.None
            };

            // „Ç´„Éº„ÉâÂ§ñÊû†„ÅÆÂΩ±ÂäπÊûú
            cardPanel.Paint += (s, e) =>
            {
                var rect = cardPanel.ClientRectangle;
                rect.Width -= 1;
                rect.Height -= 1;
                using (var pen = new Pen(Color.FromArgb(229, 231, 235)))
                {
                    e.Graphics.DrawRectangle(pen, rect);
                }
            };

            var accentBar = new Panel
            {
                Location = new Point(0, 0),
                Size = new Size(4, 90),
                BackColor = accentColor
            };

            var titleLabelControl = new Label
            {
                Text = title,
                Font = new Font("Segoe UI", 10, FontStyle.Bold),
                ForeColor = _textDark,
                Location = new Point(20, 15),
                Size = new Size(400, 25),
                TextAlign = ContentAlignment.MiddleLeft
            };

            var valueLabel = new Label
            {
                Text = value,
                Font = new Font("Segoe UI", 22, FontStyle.Bold),
                ForeColor = accentColor,
                Location = new Point(20, 35),
                Size = new Size(400, 35),
                TextAlign = ContentAlignment.MiddleLeft
            };

            cardPanel.Controls.AddRange(new Control[] { accentBar, titleLabelControl, valueLabel });
            _statsPanel.Controls.Add(cardPanel);

            return valueLabel;
        }

        private void CreateButtonPanel()
        {
            _buttonPanel = new Panel
            {
                Location = new Point(0, 570), // „Éï„Ç©„Éº„É†„ÅÆ‰∏ãÈÉ®„Å´Âõ∫ÂÆöÈÖçÁΩÆ
                Size = new Size(500, 80),
                BackColor = _backgroundColor,
                Padding = new Padding(20)
            };

            var minimizeButton = new Button
            {
                Text = "„Éà„É¨„Ç§„Å´ÊúÄÂ∞èÂåñ",
                Location = new Point(20, 20),
                Size = new Size(200, 40),
                Font = new Font("Segoe UI", 10),
                ForeColor = Color.White,
                BackColor = _primaryColor,
                FlatStyle = FlatStyle.Flat,
                Cursor = Cursors.Hand
            };
            minimizeButton.FlatAppearance.BorderSize = 0;
            minimizeButton.Click += MinimizeButton_Click;

            var exitButton = new Button
            {
                Text = "ÁµÇ‰∫Ü",
                Location = new Point(240, 20),
                Size = new Size(100, 40),
                Font = new Font("Segoe UI", 10),
                ForeColor = Color.White,
                BackColor = _dangerColor,
                FlatStyle = FlatStyle.Flat,
                Cursor = Cursors.Hand
            };
            exitButton.FlatAppearance.BorderSize = 0;
            exitButton.Click += ExitButton_Click;

            var refreshButton = new Button
            {
                Text = "Êõ¥Êñ∞",
                Location = new Point(360, 20),
                Size = new Size(100, 40),
                Font = new Font("Segoe UI", 10),
                ForeColor = Color.White,
                BackColor = _successColor,
                FlatStyle = FlatStyle.Flat,
                Cursor = Cursors.Hand
            };
            refreshButton.FlatAppearance.BorderSize = 0;
            refreshButton.Click += (s, e) => UpdateDisplay();

            _buttonPanel.Controls.AddRange(new Control[] { minimizeButton, exitButton, refreshButton });
            this.Controls.Add(_buttonPanel);
        }

        private void InitializeMonitor()
        {
            _monitor = new VsCodeMonitor();
        }

        private void InitializeNotifyIcon()
        {
            _notifyIcon = new NotifyIcon();
            _notifyIcon.Icon = SystemIcons.Application;
            _notifyIcon.Text = "VSCode ‰ΩøÁî®ÊôÇÈñì„Éà„É©„ÉÉ„Ç´„Éº";
            _notifyIcon.Visible = false;

            var contextMenu = new ContextMenuStrip();
            var showMenuItem = new ToolStripMenuItem("Ë°®Á§∫", null, ShowForm_Click);
            var exitMenuItem = new ToolStripMenuItem("ÁµÇ‰∫Ü", null, ExitApplication_Click);
            
            contextMenu.Items.AddRange(new ToolStripItem[] { showMenuItem, exitMenuItem });
            _notifyIcon.ContextMenuStrip = contextMenu;
            _notifyIcon.DoubleClick += ShowForm_Click;
        }

        private void InitializeUpdateTimer()
        {
            _updateTimer = new System.Windows.Forms.Timer();
            _updateTimer.Interval = 30000; // 30Áßí„Åî„Å®„Å´Êõ¥Êñ∞
            _updateTimer.Tick += UpdateTimer_Tick;
            _updateTimer.Start();
        }

        private void UpdateTimer_Tick(object? sender, EventArgs e)
        {
            UpdateDisplay();
        }

        private void UpdateDisplay()
        {
            try
            {
                var stats = _monitor.GetStatistics();
                
                // Áµ±Ë®àÊõ¥Êñ∞
                _totalTimeLabel.Text = FormatTimeSpan(stats.TotalTime);
                _todayTimeLabel.Text = FormatTimeSpan(stats.TodayTime);
                _weeklyAvgLabel.Text = FormatTimeSpan(stats.WeeklyAverage);
                _sessionsLabel.Text = $"{stats.TotalSessions} Âõû";

                // „Çπ„ÉÜ„Éº„Çø„ÇπÊõ¥Êñ∞
                bool isRunning = System.Diagnostics.Process.GetProcessesByName("Code").Length > 0;
                _statusLabel.Text = isRunning ? "‚óè VSCodeÂÆüË°å‰∏≠ - Áõ£Ë¶ñ‰∏≠" : "‚óã VSCodeÂÅúÊ≠¢‰∏≠ - Áõ£Ë¶ñ‰∏≠";

                // „Éà„É¨„Ç§„Ç¢„Ç§„Ç≥„É≥„ÅÆ„ÉÑ„Éº„É´„ÉÅ„ÉÉ„ÉóÊõ¥Êñ∞
                _notifyIcon.Text = $"VSCode‰ΩøÁî®ÊôÇÈñì - ÂêàË®à: {FormatTimeSpan(stats.TotalTime)}";
            }
            catch (Exception ex)
            {
                _statusLabel.Text = $"„Ç®„É©„Éº: {ex.Message}";
                _statusLabel.ForeColor = _dangerColor;
            }
        }

        private string FormatTimeSpan(TimeSpan timeSpan)
        {
            if (timeSpan.TotalMinutes < 1)
            {
                return "0ÂàÜ";
            }
            else if (timeSpan.TotalHours < 1)
            {
                return $"{timeSpan.Minutes}ÂàÜ";
            }
            else if (timeSpan.TotalDays >= 1)
            {
                return $"{(int)timeSpan.TotalDays}Êó• {timeSpan.Hours}ÊôÇÈñì {timeSpan.Minutes}ÂàÜ";
            }
            else
            {
                return $"{(int)timeSpan.TotalHours}ÊôÇÈñì {timeSpan.Minutes}ÂàÜ";
            }
        }

        private void MinimizeButton_Click(object? sender, EventArgs e)
        {
            this.Hide();
            _notifyIcon.Visible = true;
            _notifyIcon.ShowBalloonTip(2000, "VSCode‰ΩøÁî®ÊôÇÈñì„Éà„É©„ÉÉ„Ç´„Éº", "„Éà„É¨„Ç§„Å´ÊúÄÂ∞èÂåñ„Åï„Çå„Åæ„Åó„Åü", ToolTipIcon.Info);
        }

        private void ExitButton_Click(object? sender, EventArgs e)
        {
            Application.Exit();
        }

        private void ShowForm_Click(object? sender, EventArgs e)
        {
            this.Show();
            this.WindowState = FormWindowState.Normal;
            _notifyIcon.Visible = false;
            UpdateDisplay();
        }

        private void ExitApplication_Click(object? sender, EventArgs e)
        {
            Application.Exit();
        }

        private void SimpleModernForm_FormClosing(object? sender, FormClosingEventArgs e)
        {
            if (e.CloseReason == CloseReason.UserClosing)
            {
                e.Cancel = true;
                MinimizeButton_Click(sender, e);
            }
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                _monitor?.Dispose();
                _notifyIcon?.Dispose();
                _updateTimer?.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
